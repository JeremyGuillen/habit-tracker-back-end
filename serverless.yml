service: habit-tracker-api
frameworkVersion: '3'

provider:
  name: aws
  profile: habit_tracker
  stage: dev
  runtime: nodejs14.x
  environment:
    user_pool_id: {Ref: CognitoUserPool}
    client_id: {Ref: CognitoUserPoolClient}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
            - "dynamodb:Query"
            - "cognito-idp:AdminInitiateAuth"
            - "cognito-idp:AdminCreateUser"
            - "cognito-idp:AdminSetUserPassword"
          Resource: "*"
  httpApi:
    authorizers:
      jwtAuthorizerhabit:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.us-east-1.amazonaws.com/${self:custom.cognito_pool_id}
        audience:
          - ${self:custom.cognito_client_id}

functions:
  signUp:
    handler: src/functions/auth.SignUp
    events:
      - httpApi:
          path: "/auth/sign-up"
          method: post
  signIn:
    handler: src/functions/auth.SignIn
    events:
      - httpApi:
          path: "/auth/sign-in"
          method: post
  createHabit:
    handler: src/functions/habits.createHabit
    events:
      - httpApi:
          path: "/habit"
          method: post
          authorizer:
            name: jwtAuthorizerhabit
          
  updateHabit:
    handler: src/functions/habits.updateHabit
    events:
      - httpApi:
          path: "/habit/{id_habit}"
          method: put
          authorizer:
            name: jwtAuthorizerhabit
  getHabit:
    handler: src/functions/habits.getHabit
    events:
      - httpApi:
          path: "/habit/{id_habit}"
          method: get
          authorizer:
            name: jwtAuthorizerhabit
  deleteHabit:
    handler: src/functions/habits.deleteHabit
    events:
      - httpApi:
          path: "/habit/{id_habit}"
          method: delete
          authorizer:
            name: jwtAuthorizerhabit
  filterHabits:
    handler: src/functions/habits.filterHabit
    events:
      - httpApi:
          path: "/habit/filter"
          method: post
          authorizer:
            name: jwtAuthorizerhabit

plugins:
  - serverless-esbuild

resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: dev-habit-tracker-user-pool
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        Schema:
          - AttributeDataType: String
            Mutable: true
            Name: id_user
            Required: false
          - AttributeDataType: String
            Mutable: true
            Name: name
            Required: false
          - AttributeDataType: String
            Mutable: true
            Name: last_name
            Required: false
    
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        AccessTokenValidity: 1
        ClientName: dev-habit-tracker-userpool-client
        UserPoolId:
          Ref: CognitoUserPool
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
        GenerateSecret: false
        RefreshTokenValidity: 3649
        TokenValidityUnits:
          AccessToken: "days"
          RefreshToken: "days"

    HabitTrackerUsers:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: HabitTrackerUsersTable
        AttributeDefinitions:
          - AttributeName: id_user
            AttributeType: S
        KeySchema:
          - AttributeName: id_user
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    HabitTrackerHabitsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: HabitTrackerHabitsTable
        AttributeDefinitions:
          - AttributeName: id_user
            AttributeType: S
          - AttributeName: id_habit
            AttributeType: S
        KeySchema:
          - AttributeName: id_user
            KeyType: HASH
          - AttributeName: id_habit
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  cognito_client_id: 1lqehe05af3v6bnd7mmaq7o7lt
  cognito_pool_id: us-east-1_pfhkExgjc